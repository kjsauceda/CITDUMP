# GUI for Team DBZ Text Adventure

from tkinter import *
from playergui import *
import worldgui

class GUIWindow:

    def __init__(self, master):
        topFrame = Frame(master)
        topFrame.pack()
        bottomFrame = Frame(root)
        bottomFrame.pack(side=BOTTOM)
        worldgui.parse_world_dsl()
        self.player = Player()


        self.text_entry = Text(topFrame, width=80, height=10)
        self.text_entry.delete("1.0")
        self.button_north = Button(bottomFrame, text="North", command=self.move_northgui)
        self.button_west = Button(bottomFrame, text="West", command=self.move_westgui)
        self.button_east = Button(bottomFrame, text="East", command=self.move_eastgui)
        self.button_south = Button(bottomFrame, text="South", command=self.move_southgui)
        self.button_inventory = Button(bottomFrame, text="Inventory", command=self.print_inventorygui)
        self.button_heal = Button(bottomFrame, text="Heal", command=self.healgui)
        self.button_attack = Button(bottomFrame, text="Attack", command=self.attackgui)

        self.text_entry.grid(row=0, column=0)
        self.button_north.grid(row=6, column=5)
        self.button_west.grid(row=7, column=4)
        self.button_east.grid(row=7, column=6)
        self.button_south.grid(row=8, column=5)
        self.button_inventory.grid(row=6, column=3)
        self.button_heal.grid(row=8, column=3)
        self.button_attack.grid(row=7, column=3)
        self.refresh()

    def move_northgui(self):
        room = worldgui.tile_at(self.player.x, self.player.y)
        if worldgui.tile_at(room.x, room.y - 1):
            self.player.move_north()
        self.refresh()

    def move_southgui(self):
        room = worldgui.tile_at(self.player.x, self.player.y)
        if worldgui.tile_at(room.x, room.y + 1):
            self.player.move_south()
        self.refresh()

    def move_eastgui(self):
        room = worldgui.tile_at(self.player.x, self.player.y)
        if worldgui.tile_at(room.x + 1, room.y):
            self.player.move_east()
        self.refresh()

    def move_westgui(self):
        room = worldgui.tile_at(self.player.x, self.player.y)
        if worldgui.tile_at(room.x - 1, room.y):
            self.player.move_west()
        self.refresh()

    def print_inventorygui(self):
        if self.player.inventory:
            self.player.inventory()
        self.refresh()

    def healgui(self):
        room = worldgui.tile_at(self.player.x, self.player.y)
        if self.player.hp < 100:
            self.player.heal()
        self.refresh()

    def attackgui(self):
        self.text_entry.insert(INSERT, "\n"+self.player.attack())
        self.refresh()


    def refresh(self):
        room = worldgui.tile_at(self.player.x, self.player.y)
        self.text_entry.insert(INSERT, room.intro_text())
        self.text_entry.insert(INSERT, str(room.modify_player(self.player)))

        room = worldgui.tile_at(self.player.x, self.player.y)
        if worldgui.tile_at(room.x, room.y + 1):
            self.button_north.config(state=NORMAL)
        else:
            self.button_north.config(state=DISABLED)
        if worldgui.tile_at(room.x, room.y - 1):
            self.button_south.config(state=NORMAL)
        else:
            self.button_south.config(state=DISABLED)
        if worldgui.tile_at(room.x + 1, room.y):
            self.button_east.config(state=NORMAL)
        else:
            self.button_east.config(state=DISABLED)
        if worldgui.tile_at(room.x - 1, room.y + 1):
            self.button_west.config(state=NORMAL)
        else:
            self.button_west.config(state=DISABLED)

        if isinstance(room, worldgui.EnemyTile) and room.enemy.is_alive():
            self.button_attack.config(state=NORMAL)
        elif isinstance(room, worldgui.EnemyTile) and room.enemy.is_alive():
            self.button_attack.config(state=DISABLED)
        else:
            self.button_attack.config(state=DISABLED)

        if not self.player.is_alive():
            print("Your journey has come to an early end!")




root = Tk()

GUI = GUIWindow(root)

root.mainloop()
